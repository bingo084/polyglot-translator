services:
  db:
    image: postgres:17
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: polyglot
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
  broker:
    image: apache/kafka:3.9.1
    container_name: broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    ports:
      - "9092:9092"
  minio:
    image: minio/minio:RELEASE.2024-12-18T13-15-44Z
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    restart: always
    volumes:
      - minio-data:/data
    command: minio server /data --console-address ":9001"
  whisper:
    image: onerahmet/openai-whisper-asr-webservice:v1.8.2-gpu
    restart: always
    environment:
      ASR_MODEL: base
      ASR_ENGINE: openai_whisper
    ports:
      - "9003:9000"
    volumes:
      - whisper-cache:/root/.cache
  api-server:
    build:
      context: ./api-server
    image: polyglot/api-server:latest
    restart: always
    environment:
      # Each instance's WORKER_ID should be unique, used for Snowflake ID generation.
      WORKER_ID: 0
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/polyglot
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: broker:9092
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "8081:8081"
    depends_on:
      - db
      - broker
      - minio
  worker:
    build:
      context: ./worker
    image: polyglot/worker:latest
    restart: always
    environment:
      # Each instance's WORKER_ID should be unique, used for Snowflake ID generation.
      WORKER_ID: 1
      # Replace with your actual Gemini API key.
      GEMINI_API_KEY: your_gemini_api_key_here
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/polyglot
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: broker:9092
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      WHISPER_BASE_URL: http://whisper:9000
    depends_on:
      - db
      - broker
      - minio
      - whisper
volumes:
  postgres-data:
  minio-data:
  whisper-cache:
